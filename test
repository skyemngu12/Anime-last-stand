-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2024-12-31 09:33:41
-- Luau version 6, Types version 3
-- Time taken: 0.004573 seconds

pcall(function() -- Line 27
    if game.JobId ~= 12409128124121240 then return end
end)
local module_4_upvr = {
    Util = require(game.ReplicatedStorage.src.Util);
    IsLobby = workspace._MAP_CONFIG.IsLobby.Value;
    IsTimeMachine = false;
}
if workspace._MAP_CONFIG:FindFirstChild("IsTimeMachine") then
    module_4_upvr.IsTimeMachine = true
end
module_4_upvr.LevelData = nil
module_4_upvr._DEBUG_SKIP_TELEPORT_DATASTORE = nil
module_4_upvr._TELEPORT_ID = nil
module_4_upvr._TOTAL_GAME_PLAYERS = {}
local var3_upvw
local var4_upvw = false
module_4_upvr.CORE_CLASS_PATH = game.ReplicatedStorage.src.core.Classes
module_4_upvr.CLIENT_CLASS_PATH = game.ReplicatedStorage.src.client.Classes
module_4_upvr.CORE_SERVICE_PATH = game.ReplicatedStorage.src.core.Services
module_4_upvr.CLIENT_SERVICE_PATH = game.ReplicatedStorage.src.client.Services
local pcall_result1, pcall_result2 = pcall(function() -- Line 133
    --[[ Upvalues[1]:
        [1]: module_4_upvr (readonly)
    ]]
    module_4_upvr.SERVER_CLASS_PATH = game.ServerScriptService.Classes
    module_4_upvr.SERVER_SERVICE_PATH = game.ServerScriptService.Services
end)
if not pcall_result1 then
    warn(pcall_result2)
end
module_4_upvr.DATA_PATH = game.ReplicatedStorage.src.Data
module_4_upvr.ASSETS_PATH = game.ReplicatedStorage.packages.assets
module_4_upvr.LOBBY_ASSETS_PATH = game.ReplicatedStorage.LOBBY_ASSETS
local module_6_upvr = {}
local module_3_upvr = {}
local module_7_upvr = {}
local module_upvr = {}
local module_2_upvr = {}
local module_5_upvr = {}
local tbl_upvr_2 = {}
local tbl_upvr_4 = {}
function module_4_upvr.get_dependency_graph() -- Line 162
    --[[ Upvalues[1]:
        [1]: tbl_upvr_4 (readonly)
    ]]
    return tbl_upvr_4
end
local tbl_upvr = {
    [module_4_upvr.CLIENT_SERVICE_PATH.FXUtil.scripts] = true;
    [module_4_upvr.DATA_PATH.Attacks] = true;
    [module_4_upvr.CORE_SERVICE_PATH.UnitScriptsShared.SetupScripts] = true;
}
local tbl_upvr_3 = {
    [module_4_upvr.CLIENT_SERVICE_PATH.EffectScripts] = true;
    [module_4_upvr.CLIENT_SERVICE_PATH.UnitScriptsClient] = true;
    [module_4_upvr.CLIENT_SERVICE_PATH.MapScriptsClient] = true;
}
local var18_upvw = false
local function require_all_modules_upvr(arg1, arg2) -- Line 182, Named "require_all_modules"
    --[[ Upvalues[5]:
        [1]: tbl_upvr (readonly)
        [2]: tbl_upvr_3 (readonly)
        [3]: tbl_upvr_2 (readonly)
        [4]: module_4_upvr (readonly)
        [5]: var18_upvw (read and write)
    ]]
    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
    local pairs_result1, pairs_result2, pairs_result3 = pairs(arg1:GetDescendants())
    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [107] 84. Error Block 26 start (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [107] 84. Error Block 26 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [7] 6. Error Block 2 start (CF ANALYSIS FAILED)
    -- KONSTANTWARNING: Failed to evaluate expression, replaced with nil [107.7]
    -- KONSTANTERROR: [7] 6. Error Block 2 end (CF ANALYSIS FAILED)
end
function init_dependencies(arg1) -- Line 242
    for _, v in pairs(arg1) do
        if not v.lazy_load and v.module.init_dependencies then
            v.module.init_dependencies()
        end
    end
end
function module_4_upvr.init(arg1) -- Line 259
    --[[ Upvalues[11]:
        [1]: var4_upvw (read and write)
        [2]: var3_upvw (read and write)
        [3]: module_4_upvr (readonly)
        [4]: tbl_upvr_3 (readonly)
        [5]: require_all_modules_upvr (readonly)
        [6]: module_6_upvr (readonly)
        [7]: module_upvr (readonly)
        [8]: module_3_upvr (readonly)
        [9]: module_2_upvr (readonly)
        [10]: module_7_upvr (readonly)
        [11]: module_5_upvr (readonly)
    ]]
    if var4_upvw then
        warn("Loader module already initialized!")
    else
        var3_upvw = arg1
        module_4_upvr.is_server = var3_upvw
        pcall(function() -- Line 275
            --[[ Upvalues[1]:
                [1]: module_4_upvr (copied, readonly)
            ]]
            module_4_upvr.ASSETS_PATH.PackageLink:Destroy()
        end)
        if var3_upvw then
            pcall(function() -- Line 279
                game.ServerStorage.BlessingAssets.PackageLink:Destroy()
            end)
            tbl_upvr_3[module_4_upvr.SERVER_SERVICE_PATH.BlessingScripts] = true
        end
        require_all_modules_upvr(module_4_upvr.CORE_CLASS_PATH, module_6_upvr)
        require_all_modules_upvr(module_4_upvr.CORE_SERVICE_PATH, module_upvr)
        if var3_upvw then
            require_all_modules_upvr(module_4_upvr.SERVER_CLASS_PATH, module_3_upvr)
            require_all_modules_upvr(module_4_upvr.SERVER_SERVICE_PATH, module_2_upvr)
        else
            require_all_modules_upvr(module_4_upvr.CLIENT_CLASS_PATH, module_7_upvr)
            require_all_modules_upvr(module_4_upvr.CLIENT_SERVICE_PATH, module_5_upvr)
        end
        var4_upvw = true
        init_dependencies(module_6_upvr)
        init_dependencies(module_upvr)
        if var3_upvw then
            init_dependencies(module_3_upvr)
            init_dependencies(module_2_upvr)
            return
        end
        init_dependencies(module_7_upvr)
        init_dependencies(module_5_upvr)
    end
end
local var29_upvw
function load_module(arg1, arg2, arg3) -- Line 314
    --[[ Upvalues[3]:
        [1]: var4_upvw (read and write)
        [2]: var29_upvw (read and write)
        [3]: tbl_upvr_4 (readonly)
    ]]
    if not var4_upvw then
        warn(arg1, " tried to load module ", arg2, " before loader was initialized!")
    end
    if var29_upvw then
        if tbl_upvr_4[arg1] then
            tbl_upvr_4[arg1][arg2] = true
        else
            tbl_upvr_4[arg1] = {
                req_module = true;
            }
        end
    end
    local var31 = arg3[arg2]
    if not var31 then
        warn("Module not found: ", arg2, ", required by ", arg1)
        return nil
    end
    if not var31.module then
        if not var31.lazy_load then
            warn("Module", arg2, "was not lazy loaded but was not initialized")
        end
        var31.module = require(var31.module_script)
        if not var31.module then
            warn(arg2, "did not return a module")
        elseif var31.module.init_dependencies then
            var31.module.init_dependencies()
        end
    end
    return var31.module
end
function module_4_upvr.load_core_class(arg1, arg2) -- Line 367
    --[[ Upvalues[2]:
        [1]: tbl_upvr_2 (readonly)
        [2]: module_6_upvr (readonly)
    ]]
    return load_module(tbl_upvr_2[arg1], arg2, module_6_upvr)
end
function module_4_upvr.load_server_class(arg1, arg2) -- Line 372
    --[[ Upvalues[3]:
        [1]: var3_upvw (read and write)
        [2]: tbl_upvr_2 (readonly)
        [3]: module_3_upvr (readonly)
    ]]
    if not var3_upvw then
        warn("Server class ", arg2, " was accessed by client module ", tbl_upvr_2[arg1])
        return
    end
    return load_module(tbl_upvr_2[arg1], arg2, module_3_upvr)
end
function module_4_upvr.load_client_class(arg1, arg2) -- Line 383
    --[[ Upvalues[3]:
        [1]: var3_upvw (read and write)
        [2]: tbl_upvr_2 (readonly)
        [3]: module_7_upvr (readonly)
    ]]
    if var3_upvw then
        warn("Client class ", arg2, " was accessed by server module ", tbl_upvr_2[arg1])
        return
    end
    return load_module(tbl_upvr_2[arg1], arg2, module_7_upvr)
end
function module_4_upvr.load_core_service(arg1, arg2) -- Line 397
    --[[ Upvalues[2]:
        [1]: tbl_upvr_2 (readonly)
        [2]: module_upvr (readonly)
    ]]
    return load_module(tbl_upvr_2[arg1], arg2, module_upvr)
end
function module_4_upvr.load_server_service(arg1, arg2) -- Line 402
    --[[ Upvalues[3]:
        [1]: var3_upvw (read and write)
        [2]: tbl_upvr_2 (readonly)
        [3]: module_2_upvr (readonly)
    ]]
    if not var3_upvw then
        warn("Server service ", arg2, " was accessed by client module ", tbl_upvr_2[arg1])
        return
    end
    return load_module(tbl_upvr_2[arg1], arg2, module_2_upvr)
end
function module_4_upvr.load_client_service(arg1, arg2) -- Line 413
    --[[ Upvalues[3]:
        [1]: var3_upvw (read and write)
        [2]: tbl_upvr_2 (readonly)
        [3]: module_5_upvr (readonly)
    ]]
    if var3_upvw then
        warn("Client service ", arg2, " was accessed by server module ", tbl_upvr_2[arg1])
        return
    end
    return load_module(arg1, arg2, module_5_upvr)
end
local tbl_upvr_5 = {}
function module_4_upvr.load_data(arg1, arg2) -- Line 424
    --[[ Upvalues[2]:
        [1]: tbl_upvr_5 (readonly)
        [2]: module_4_upvr (readonly)
    ]]
    if tbl_upvr_5[arg2] then
        return tbl_upvr_5[arg2]
    end
    local module = require(module_4_upvr.DATA_PATH:FindFirstChild(arg2, true))
    tbl_upvr_5[arg2] = module
    return module
end
function module_4_upvr.get_assets_path() -- Line 437
    --[[ Upvalues[1]:
        [1]: module_4_upvr (readonly)
    ]]
    return module_4_upvr.ASSETS_PATH
end
function module_4_upvr.get_lobby_assets_path() -- Line 442
    --[[ Upvalues[1]:
        [1]: module_4_upvr (readonly)
    ]]
    return module_4_upvr.LOBBY_ASSETS_PATH
end
local any_load_data_result1 = module_4_upvr.load_data(script, "GameplaySettings")
var29_upvw = any_load_data_result1.PRINT_DEPENDENCY_GRAPH
local TESTING_ENABLED = any_load_data_result1.TESTING_ENABLED
if TESTING_ENABLED then
    if any_load_data_result1.LOBBY_PLACE_ID ~= 9987049970 then
        TESTING_ENABLED = false
    else
        TESTING_ENABLED = true
    end
end
var18_upvw = TESTING_ENABLED
return module_4_upvr
